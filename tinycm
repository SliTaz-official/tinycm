#!/bin/sh
#
# TinyCM Command line tool. Dont use libtaz since TinyCM can run on any
# Linux/BSD distribution providing a web server with CGI SHell support
# such as LightTPD.
#
# Copyright (C) 2014-2017 SliTaz GNU/Linux - BSD License
#

list="tinycm.list"
path="${2%/}"
hgurl="http://hg.slitaz.org/tinycm"
dlurl="$hgurl/archive/tip.tar.bz2"

#
# Functions
#

boldify() {
	echo -e "\\033[1m$@\\033[0m"
}

error() {
	echo -e "\\033[1;31m$@\\033[0;39m"
}

usage() {
	cat << EOT

$(boldify "Usage:") $(basename $0) [command] [path|list]

$(boldify "Commands:")
  inst       Install TinyCM and set permissions
  up         Update one or a list of TinyCM installations

EOT
}

check_source() {
	if [ ! -f "Makefile" ] || [ ! -f "index.cgi" ]; then
		error "No source found" && exit 1
	fi
}

check_path() {
	if [ ! "$path" ]; then
		error "Missing path argument" && exit 1
	fi
}

check_tiny() {
	if [ ! -f "$path/index.cgi" ] || [ ! -d "$path/lib" ]; then
		error "Missing TinyCM in: $path"
		continue
	fi
}

# Rebuilt an up-to-date config file, plugins may need new variables
update_config() {
	echo "Updating config file: confi.cgi"
	. ${path}/config.cgi
	# Def value for new variables
	[ ! "$WALL_MODE" ] && WALL_MODE="public"
	[ ! "$WALL_MESSAGES_LENGTH" ] && WALL_MESSAGES_LENGTH="240"
	# from 1.4
	[ ! "$ADMIN_USERS" ] && ADMIN_USERS=$(dirname "$AUTH_FILE")/admin
	cat > ${path}/config.cgi << EOT
#
# TinyCM configuration
#

# Administrator email.
ADMIN_MAIL="$ADMIN_MAIL"

# Auth file for user
AUTH_FILE="$AUTH_FILE"

# Admin users file list
ADMIN_USERS="/var/lib/slitaz/auth/admin"

# People config files
PEOPLE="$PEOPLE"

# CM documents languages.
LANGUAGES="$LANGUAGES"

# Online registration for user
ONLINE_SIGNUP="$ONLINE_SIGNUP"

# Use Mercurial repo for content and configure user name
HG="$HG"

#
# Plugin configuration: community.cgi
#

# Wall mode: public/private
WALL_MODE="$WALL_MODE"

# Max length for messages on the Wall
WALL_MESSAGES_LENGTH="$WALL_MESSAGES_LENGTH"

# Twitter user name and/or Facebook page URL name 
TWITTER_USER="$TWITTER_USER"
FACEBOOK_PAGE="$FACEBOOK_PAGE"
EOT
	unset TWITTER_USER FACEBOOK_PAGE
}

#
# Commands
#

case "$1" in
	inst)
		check_source
		check_path
		echo ""
		boldify "Installing TinyCM..."
		echo "Path:"; echo "$path"
		mkdir -p $path
		for file in index.cgi style.css images lib plugins
		do
			echo "* Installing: $file"
			cp -a $file $path
		done
		if [ $(id) == 0 ]; then
			echo root
		else
			echo user
		fi
		echo "" ;;
	up)
		check_source
		if [ ! "$path" ] && [ ! -f "$list" ]; then
			error "Missing path argument or paths list: $list"
			exit 1
		fi
		echo ""
		boldify "Updating TinyCM install(s)..."
		echo ""
		
		# File liste of args
		if [ -f "$path" ]; then
			paths="$(cat ${list})"
		else
			paths="$path"
		fi
		
		for path in ${paths}
		do
			check_tiny
			echo "Updating TinyCM: $path"
			cp -a index.cgi $path
			cp -a lib/functions.js $path/lib
			cp -a lib/jseditor.html $path/lib
			echo "Updating plugins..."
			for plug in $(ls plugins)
			do
				if [ -d "$path/plugins/$plug" ]; then
					echo "* Updating plugin: $plug"
					cp -a plugins/$plug $path/plugins
				fi
			done
			update_config
		done && echo "" ;;
	*)
		usage ;;
esac

exit 0
